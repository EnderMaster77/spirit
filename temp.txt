## A MetSysModule that handles room transitions.
##
## The module connects to [signal MetroidvaniaSystem.room_changed]. When room changes, the new scene gets is loaded via [code]load_room()[/code] method. If MetSysGame has a player set, the player will be automatically teleported to the correct entrance.
extends "res://addons/MetroidvaniaSystem/Template/Scripts/MetSysModule.gd"

var player: Node2D
var fadeinanim: CanvasLayer
func _initialize():
	player = game.player
	for i in player.get_children():
		if i.has_method("fadein"):
			fadeinanim = i
	assert(player)
	MetSys.room_changed.connect(_on_room_changed, CONNECT_DEFERRED)

func _on_room_changed(target_room: String):
	if target_room == MetSys.get_current_room_name():
		# This can happen when teleporting to another room.
		return
	fadeinanim.fading_in = true
	player.process_mode = Node.PROCESS_MODE_DISABLED
	player.set_process(false)
	while fadeinanim.alpha < 1:
		await player.get_tree().create_timer(0.05).timeout

	#var playerelem: String = player.element
	#var playervel :Vector2 = player.velocity
	#player.velocity = Vector2.ZERO
	#player.element = "disabled"

	var prev_room_instance := MetSys.get_current_room_instance()
	if prev_room_instance:
		prev_room_instance.get_parent().remove_child(prev_room_instance)
	player.process_mode = Node.PROCESS_MODE_INHERIT
	player.set_process(true)
	await game.load_room(target_room)

	if prev_room_instance:
		player.position -= MetSys.get_current_room_instance().get_room_position_offset(prev_room_instance)
		prev_room_instance.queue_free()
	fadeinanim.fading_out = true
	player.process_mode = Node.PROCESS_MODE_INHERIT
	player.set_process(true)
	# For some reason, if the player can move during the transition, the game will stop loading.
	#player.velocity = playervel
	#if playerelem != "disabled":
	#	player.element = playerelem
	#else:
	#	player.element = "neutral"
